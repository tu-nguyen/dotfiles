# ~/.bash_extras/.bash_tt

br="------------------------------------------------------------------------------------------"

# Generalized function printer
function print_tt() {
    local file="$1"
    if [[ ! -f "$file" ]]; then
        echo "File not found: $file"
        return 1
    fi

    awk '
    BEGIN { comment="" }
    /^#/ { comment = $0; next }
    /^[a-zA-Z_][a-zA-Z0-9_]* *\(\) *\{/ {
        gsub(/^# *|^## */, "", comment)
        sub(/ *\(\) *\{/, "", $0)
        printf "%-20s -> %s\n", $0, comment
        comment=""
    }' "$file"
}

function ttgit() {
  printf "git                  -> s (status -s)                -> b (fancy branch)\n"
  printf "                     -> st (status)                  -> br (branch)\n"
  printf "                     -> co (checkout)                -> a (add)\n"
  printf "                     -> cob (checkout -b)            -> ap (add -p)\ \n"
  printf "                     -> coB (checkout -B)            \n"
  
  printf "                     -> c (commit)                   -> d (diff)\n" 
  printf "                     -> ca (commit -a)               -> ds (diff --stat)\n" 
  printf "                     -> cm (commit -m)               -> dc (diff --cached)\n"
  printf "                     -> cam (commit -a -m)           -> l(diff)\n" 
  printf "                     -> m (commit -m)                -> la (list config)\n" 
}


function dktt() {
  dktt_ref
  printf "%s\n" "$br"  
  print_tt "$EXTRAS_DIR/.bash_docker_functions"
}

function tt() {
  printf "primary functions    -> r (source .bashrc)           -> j (jobs -l)\n"
  printf "                     -> c (clear)                    -> df (df -H)\n"
  printf "                     -> h (history)                  -> du (du -ch)\n"
  printf "                     -> x (exit)                     -> top (htop)\n"
  printf "                     -> v (vim)                      -> \n"
  # ls
  printf "%s\n" "$br"
  printf "ls & cd              -> ll (ls -alh)                 -> ~ (cd ~)\n"
  printf "                     -> la (ls -A)                   -> .. (cd ..)\n"
  printf "                     -> lsd (ls -a1F | grep /$)      -> ... (cd ../..)\n"
  printf "                     -> lt (la -lt)                  -> .... (cd ../../..)\n"
  printf "                     -> la (ls -A)                   -> .4 (../../../../)\n"
  # cd
  printf "%s\n" "$br"
  printf "utils                -> myip (get ip)                -> now/nowtime (time)\n"
  printf "                     -> ping (ping -c 5)             -> nowdate (date)\n" 
  printf "                     -> p4 (ping 4.2.2.2 -c 4)       -> diskspace (du)\n"
  printf "                     -> fastping (ping -c 100 -s.2)  -> folder ()\n"
  printf "                     -> ports (netstat -tulanp)      -> path ()->\n"
  # other
  printf "%s\n" "$br"
  printf "other functions      \n"
  print_tt "$EXTRAS_DIR/.bash_functions"
  # other other
  printf "%s\n" "$br"
  printf "other tt      \n"
  printf "ttcs                 -> to view bash cheatsheet\n"
  printf "ttgit                -> to view git aliases\n"
  printf "dktt                 -> to view docker stuff\n"

  if [[ ! -f "$EXTRAS_DIR/.bash_twork" ]]; then
    printf "tworktt              -> .bash_twork does not exist inside .bash_extras\n"
  else
    printf "tworktt              -> to view twork stuff\n"
  fi
}

function ttt() {
  printf "r (source .bashrc) \n"
  printf "c (clear) \n"
  printf "h (history)   \n"
  printf "x (exit) \n"
  printf "v (vim)   \n"
  printf "j (jobs -l)\n"
  printf "df (df -H) \n"
  printf "du (du -ch) \n"
  printf "top (htop) \n"
  printf "ll (ls -alh)  \n"
  printf "la (ls -A) \n"
  printf "lsd (ls -a1F | grep /$) \n"
  printf "lt (la -lt)  \n"
  printf "la (ls -A)   \n"
  printf "~ (cd ~) \n"
  printf ".. (cd ..) \n"
  printf "... (cd ../..) \n"
  printf ".... (cd ../../..) \n"
  printf ".4 (../../../../)\n"
  printf ".4 (../../../../) \n"
  printf "myip (get ip) \n"
  printf "ping (ping -c 5)  \n"
  printf "p4 (ping 4.2.2.2 -c 4)  \n"
  printf "fastping (ping -c 100 -s.2) \n"
  printf "ports (netstat -tulanp)  \n"
  printf "now/nowtime (time) \n"
  printf "nowdate (date) \n"
  printf "diskspace (du) \n"
  printf "folder () \n"
  printf "path () \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"
  printf "r (source .bashrc) \n"

}
