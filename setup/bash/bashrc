# ========================================== #
# 
# #

# TODO add comments later
# ========================================== #

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

set -o vi
set -o ignoreeof

shopt -s dotglob 
shopt -s nullglob
shopt -s checkwinsize
shopt -s cdspell
shopt -s cdable_vars
shopt -s checkhash
shopt -s sourcepath
shopt -s no_empty_cmd_completion
shopt -s cmdhist
shopt -s histappend histreedit histverify

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

#------------------------------------------
# Load custom bash files
#------------------------------------------
# Load custom bash files from ~/.bash_extras
if [[ -d "$HOME/.bash_extras" ]]; then
    # Load the prep file if it exists
    if [[ -f "$HOME/.bash_extras/.init" ]]; then
        . "$HOME/.bash_extras/.init"
    fi
    # Load all bash files in ~/.bash_extras
    for file in "$HOME/.bash_extras/.bash_"*; do
        if [[ -f "$file" ]]; then
        [ -f "$file" ] && . "$file"
        fi
    done
fi

#------------------------------------------
# Powerline settings
#------------------------------------------
ORIGINAL_POWERLINE_PATH=$(pip show powerline-status 2>/dev/null | grep '^Location:' | cut -d' ' -f2-)
normalize_powerline_path() {
  local path="$1"
  if [[ "$path" == "$HOME"* ]]; then
    echo "\$HOME${path#$HOME}"
  else
    echo "$path"
  fi
}
POWERLINE_PATH=$(normalize_powerline_path "$ORIGINAL_POWERLINE_PATH")
export PATH="$POWERLINE_PATH:$PATH"
export PATH="$HOME/Library/Python/3.12/bin:$PATH"  # tmp hardcode for macOS

is_powerline_enabled() {
    pgrep -f powerline-daemon >/dev/null && return 0
    type _powerline_prompt 2>/dev/null | grep -q "function" && return 0
    echo "$PS1" | grep -q "powerline" && return 0
    return 1
}

enable_powerline() {
    if [[ -n "$POWERLINE_PATH" ]]; then
        powerline-daemon -q
        POWERLINE_BASH_CONTINUATION=1
        POWERLINE_BASH_SELECT=1
        source "$POWERLINE_PATH/powerline/bindings/bash/powerline.sh"
    fi
}

function _update_ps1() {
    PS1=$(powerline-shell $?)
}

if is_powerline_enabled; then
    if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
        PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
        if is_powerline_enabled; then
            t SUCCESS "Powerline is enabled"
        else
            t WARNING "Powerline is not enabled"
        fi
    fi
fi

#------------------------------------------
# Greeting, motd, and colors
#------------------------------------------
# TODO
# echo -e "${BOLD}${CYAN}Hello, World! This is BASH ${BOLD}${RED}${BASH_VERSION%.*}${BOLD}${CYAN}\
# - TODO ${BOLD}${RED}..{NC}"
date
