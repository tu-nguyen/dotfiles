
if [[ -f "$HOME/.bash_extras/.bash_colours" ]]; then
    . "$HOME/.bash_extras/.bash_colours"
elif [[ -f "$DOTFILES_REPO_DIR/bash/bash_colours" ]]; then
    . "$DOTFILES_REPO_DIR/bash/bash_colours"
else
    echo "[WARNING] Failed to load colours"
fi

t() {
  # t "System started"                  # [INFO] System started
  # t WARNING "Disk space low"          # [WARNING] Disk space low
  # t ERROR "Failed to connect to DB"   # [ERROR] Failed to connect to DB
  # t                                   # Hello world
  local severity message color

  if [[ $# -eq 0 ]]; then
    echo -e "${GREEN}Hello world${NC}"
    return
  elif [[ $# -eq 1 ]]; then
    severity="INFO"
    message="$1"
  else
    severity="${1}"  # Convert to uppercase
    message="$2"
  fi

  # Determine color and label
  case "$severity" in
    info|INFO)
      echo -e "${BOLD}${PINK}[INFO]${NC} $message ${NC}"
      ;;
    warn|warning|WARNING)
      echo -e "${BOLD}${YELLOW}[WARNING]${NC} $message ${NC}"
      ;;
    err|error|ERR|ERROR)
      echo -e "${BOLD}${RED}[ERROR]${NC} $message ${NC} ${NC}"
      ;;
    success|ok|SUCCESS|OK)
      echo -e "${BOLD}${GREEN}[SUCCESS]${NC} $message ${NC}"
      ;;
    todo|TODO)
      echo -e "${BOLD}${BRIGHT_MAGENTA}[TODO]${NC} $message ${NC}"
      ;;
    debug|DEBUG)
      echo -e "${BOLD}${CYAN}[DEBUG]${NC} $message ${NC}"
      ;;
    *)
      echo -e "${BOLD}[UNKNOWN]${NC} $severity: $message ${NC}"
      ;;
  esac
}
